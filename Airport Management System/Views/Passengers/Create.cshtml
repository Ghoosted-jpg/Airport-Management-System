@model Airport_Management_System.Models.Passenger

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/other.cshtml";
}
@section Main{
    <h2 class="fw-bold text-gray-800">Add Passenger</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal fw-bold text-gray-800">
            <h4>@*Passenger*@</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <br />
                @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <br />
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <br />
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", id = "dateField" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <br />
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Gender,
                        new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Male", Value = "Male" },
                            new SelectListItem { Text = "Female", Value = "Female" },
                            new SelectListItem { Text = "Other", Value = "Other" }
                        },
                        "Select Gender",
                        new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <br />
                <span>House No</span>
                @*@Html.LabelFor(model => model.H_no, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.H_no, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.H_no, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <br />
                @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <br />
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <br />
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <br />
                <span>Flight ID</span>
                @*@Html.LabelFor(model => model.Flight_ID, "Flight_ID", htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.DropDownList("Flight_ID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Flight_ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default fw-bold text-gray-800" />
                </div>
            </div>
        </div>
    }

    <div class="fw-bold text-gray-800">
        @Html.ActionLink("Back to List", "Index")
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
     $(document).ready(function () {
         var today = new Date().toISOString().split('T')[0];
         document.getElementById("dateField").setAttribute('max', today);
     });</script>
}
